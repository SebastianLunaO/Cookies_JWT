<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

</head>

<style>
    body {
    font-family: Arial, sans-serif;
    background-color: #f9f9f9;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    color: #333;
}

.container {
    width: 90%;
    max-width: 400px;
    margin: auto;
}

/* Form Container */
.form-container {
    background: #ffffff;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

h2 {
    font-size: 1.5rem;
    margin-bottom: 10px;
    text-align: center;
}

label {
    display: block;
    font-size: 0.9rem;
    margin-bottom: 5px;
}

input[type="text"],
input[type="password"] {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    font-size: 1rem;
}

button {
    width: 100%;
    padding: 10px;
    background-color: #007bff;
    border: none;
    border-radius: 4px;
    color: white;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #0056b3;
}

button:disabled {
    background-color: #ccc;
    cursor: not-allowed;
}

span {
    display: block;
    text-align: center;
    font-size: 0.9rem;
    margin-top: 10px;
}

/* Greetings */
.form-container h2 {
    color: #007bff;
}

p {
    text-align: center;
    margin-top: 10px;
    color: #555;
}

/* Close Session Button */
#close-session {
    background-color: #dc3545;
    margin-top: 10px;
}

#close-session:hover {
    background-color: #a71d2a;
}

/* Responsive Design */
@media (max-width: 480px) {
    .form-container {
        padding: 15px;
    }

    button {
        font-size: 0.9rem;
    }
}

</style>
<body>
    <div class="container">
        <% if (typeof username !=='undefined') { %>
            <div class="form-container">
                <h2> Hola <%= username %></h2>
                <p>Estas en el panel de administracion</p>
                <button id="close-session">Cerrar sesion</button>
            </div>
        <% } %>

        <% if (typeof username === 'undefined') { %>
            <div class="form-container">
                <form id="login-form">
                    <h2>Login</h2>
                    <label for="login-username">Username</label>
                    <input type="text" id="login-username" name="username" required>
                    <label for="login-password"> Password</label>
                    <input type="password" name="password" id="login-password" required>
                    <button type="submit">Login</button>
                    <span>&nbsp;</span>
                </form>
            </div>

            <div class="form-container">
                <form id="register-form">
                    <h2>Register</h2>
                    <label for="login-username">Username</label>
                    <input type="text" id="register-username" name="username" required>
                    <label for="register-password">Password</label>
                    <input type="password" name="password" id="register-password" required>

                    <label for="register-confirm-password">Confirm Password</label>
                    <input type="password" name="confirm-password" id="register-confirm-password" required>

                    <button type="submit">Register</button>
                    <span>&nbsp;</span>
                </form>
            </div>
        <% }%>
    </div>

    <script>
        const $ = el => document.querySelector(el)

        const loginForm = $('#login-form')
        const loginSpan = $('#login-form span')

        const registerForm = $('#register-form')
        const registerSpan = $('#register-form span')

        const logoutButton = $('#close-session')


        loginForm?.addEventListener('submit', e =>{
            e.preventDefault()
            const username = $('#login-username').value
            const password = $('#login-password').value
            
            fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({username,password})
            })
            .then(res =>{
                if (res.ok){
                    loginSpan.innerText = 'Sesion iniciada...  Entrando...'
                    loginSpan.style.color = 'green'
                    setTimeout(()=>{
                        window.location.href = '/protected'
                    },2000)
                } else {
                    loginSpan.innerText = 'Error al iniciar sesion'
                    loginSpan.style.color = 'red'
                }
            })

        })

        registerForm?.addEventListener('submit', e =>{
            e.preventDefault()
            const username = $('#register-username').value
            const password = $('#register-password').value
            const confirmPassword = $('#register-confirm-password').value
            
            if(password !== confirmPassword){
                alert('Password do not match')
                return
            }

            fetch('/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({username,password})
            })
            .then(res =>{
                if (res.ok){
                    registerSpan.innerText = 'Usuario Creado'
                    registerSpan.style.color = 'green'
                    setTimeout(()=>{
                        window.location.href = '/'
                    },2000)
                } else {
                    registerSpan.innerText = 'Error al iniciar sesion'
                    registerSpan.style.color = 'red'
                }
            })

        })

        logoutButton?.addEventListener('click', e =>{
            e.preventDefault()
            fetch('/logout',{
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(res =>{
            console.log(res)
            window.location.href='/'
            })
        })
        
    </script>
</body>
</html>